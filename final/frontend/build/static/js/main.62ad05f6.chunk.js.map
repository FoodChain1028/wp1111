{"version":3,"sources":["components/DrawerHeader.js","graphql/queries.js","graphql/mutations.js","containers/hook/useSol.js","containers/navigationBar.js","components/Navbar.js","containers/Signin.js","components/Main.js","components/Home.js","components/Quiz.js","components/About.js","components/Profile.js","components/ProblemPage.js","components/CopyButton.js","components/History.js","App.js","reportWebVitals.js","index.js"],"names":["DrawerHeader","styled","theme","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","GET_USER_QUERY","gql","GET_QUESTION_QUERY","GET_ALL_QUESTION_OF_USER_QUERY","GET_ALL_QUESTION_DATA_QUERY","CREATE_USER_MUTATION","CREATE_QUESTION_MUTATION","UPDATE_QUESTION_STATUS_MUTATION","CREATE_QUESTION_DATA_MUTATION","UPDATE_ANSWER_RECORD","SET_USER_NAME_MUTATION","SolContext","createContext","navOpen","setNavOpen","signedIn","setSignedIn","account","setAccount","problemSet","code","setCode","getUser","getQuestion","getQuestionOfUser","createUser","createQuestion","updateQuestionStatus","createQuestionData","updateAnswerRecord","setUserName","getAllQuestion","SolProvider","props","useState","useLazyQuery","useMutation","Provider","value","id","description","isCorrect","useSol","useContext","NavigationBar","AppBar","MuiAppBar","shouldForwardProp","prop","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","easeOut","enteringScreen","marginLeft","position","color","Toolbar","IconButton","edge","onClick","sx","Typography","variant","align","noWrap","flexGrow","component","fontFamily","navbarTheme","createTheme","status","danger","palette","primary","main","darker","neutral","contrastText","typography","join","fontSize","Navbar","navigate","useNavigate","ThemeProvider","Drawer","flexShrink","anchor","Divider","List","map","text","i","icon","handleIcon","ListItem","disablePadding","ListItemButton","handleOnClick","ListItemIcon","paragraph","INFURA_ID","process","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","coinbasewallet","CoinbaseWalletSDK","appName","rpc","chainId","darkMode","binancechainwallet","web3Modal","Web3Modal","network","cacheProvider","connectWallet","window","ethereum","connect","provider","web3","Web3","send","eth","getAccounts","accounts","alert","Copyright","Link","Date","getFullYear","SignIn","handleConnect","event","preventDefault","addr","variables","address","questionId","useEffect","Grid","container","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","flexDirection","Avatar","m","bgcolor","mt","noValidate","onSubmit","Button","type","fullWidth","mb","Main","marginRight","Home","href","underline","StyledTableCell","TableCell","tableCellClasses","head","common","black","white","body","StyledTableRow","TableRow","action","hover","border","Quiz","res1","useQuery","res2","loading","data","userData","error","userLoading","_problemSet","allQuestionData","console","log","_userData","allQuestionOfUser","length","name","style","marginTop","TableContainer","Table","minWidth","TableHead","TableBody","problem","scope","Tooltip","title","About","Stack","direction","alt","src","modalStyle","top","left","transform","boxShadow","p","pic","Profile","modalOpen","setModalOpen","setName","num","setNum","_name","user","handleSubmit","flexWrap","marginBottom","cursor","textAlign","fontWeight","right","gap","EmojiEvents","Modal","onClose","TextField","label","required","onChange","e","target","Alert","forwardRef","ref","typoStyle","ProblemPage","setOpen","correct","setCorrect","useParams","drawerWidth","eWidth","Number","questionData","thisData","_loading","_questionData","tryId","question","answerRecord","handleClose","reason","handleClick","answer","record","example1","example2","others","language","defaultValue","handleOnChange","Snackbar","autoHideDuration","severity","CopyButton","navigator","clipboard","writeText","message","History","numId","handleOpen","App","path","index","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","HttpLink","uri","wsLink","GraphQLWsLink","createClient","url","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","render","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.62ad05f6.chunk.js","sourcesContent":["import {styled} from '@mui/material/styles';\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n}));\n\nexport default DrawerHeader;\n\n","import { gql } from '@apollo/client';\n\nconst GET_USER_QUERY = gql\n`\nquery user(\n  $address: String!\n) {\n  user(address:$address){\n    address\n    name\n    }\n  }\n`;\n\nconst GET_QUESTION_QUERY = gql\n`\nquery question(\n  $address: String!\n  $questionId: Int!\n) {\n  question(\n    address: $address, \n    questionId: $questionId\n  ){\n    address\n    questionId\n    isCorrect\n    answerRecord {\n      tryId\n      isCorrect\n      record\n      }\n    }\n}\n`;\n\nconst GET_ALL_QUESTION_OF_USER_QUERY = gql\n`\nquery allQuestionOfUser(\n  $address: String!\n) {\n  allQuestionOfUser(\n    address:$address, \n){\n    address\n    questionId\n    isCorrect\n    answerRecord{\n      tryId\n      isCorrect\n      record\n    }\n  }\n}\n`;\n\nconst GET_ALL_QUESTION_DATA_QUERY = gql\n`\nquery getAllQuestionData{\n  allQuestionData{\n    questionId\n    name\n    description\n    example1\n    example2\n    code\n    others\n    answer\n    }\n  }\n`;\n\nexport {GET_USER_QUERY, GET_QUESTION_QUERY, GET_ALL_QUESTION_OF_USER_QUERY, GET_ALL_QUESTION_DATA_QUERY}\n","import { gql } from '@apollo/client';\n\nexport const CREATE_USER_MUTATION = gql`\nmutation CreateItem($address: String!) {\n  createUser(address: $address) {\n    address\n    name\n  }\n}\n`\n\nexport const CREATE_QUESTION_MUTATION = gql`\nmutation CreateQuestion(\n  $address: String!\n  $questionId: Int!\n) {\n  createQuestion(\n    address: $address,\n    questionId: $questionId\n  ) {\n    address\n    questionId\n    isCorrect\n  }\n}\n`\n\nexport const UPDATE_QUESTION_STATUS_MUTATION = gql`\nmutation updateQuestionStatusMutation(\n  $address: String!\n  $questionId: Int!\n) {\n  updateQuestionStatus(\n    address: $address,\n    questionId: $questionId\n  ) {\n    address\n    questionId\n    isCorrect\n    answerRecord\n  }\n}\n`\n\nexport const CREATE_QUESTION_DATA_MUTATION = gql`\nmutation createQuestionData(\n  $address: String!,\n  $questionId: Int!, \n  $name: String!, \n  $description: String!, \n  $example1: String!, \n  $example2: String!, \n  $code: String!, \n  $others: String!,\n  $answer: String!\n) {\n  createQuestionData(\n    address: $address,\n    questionId: $questionId,\n    name: $name,\n    description: $decription, \n    example1: $example1, \n    example2: $example2, \n    code: $code, \n    others: $others\n    answer: $answer\n  ) {\n    address\n    questionId\n    name\n    description:\n    example1\n    example2\n    code \n    others\n    answer\n  }\n}\n`\n\nexport const UPDATE_ANSWER_RECORD = gql`\nmutation updateAnswerRecord(\n  $address: String!,\n  $questionId: Int!,\n  $tryId: Int!,\n  $isCorrect: Boolean!,\n  $record: String! \n) {\n  updateAnswerRecord(\n    address: $address,\n    questionId: $questionId,\n    tryId: $tryId,\n    isCorrect: $isCorrect,\n    record: $record\n  ) {\n    address\n    questionId\n    isCorrect\n    answerRecord{\n      tryId\n      isCorrect\n      record\n    }\n  }\n}\n`\n\nexport const SET_USER_NAME_MUTATION = gql`\nmutation setUserName($address: String!, $name: String!) {\n  setUserName(address: $address, name: $name) {\n    address\n    name\n  }\n}\n`\n\n","import { useState, createContext, useContext } from 'react';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client';\nimport { \n  GET_USER_QUERY, \n  GET_QUESTION_QUERY,\n  GET_ALL_QUESTION_OF_USER_QUERY, \n  GET_ALL_QUESTION_DATA_QUERY \n} from '../../graphql/queries';\nimport { \n  CREATE_USER_MUTATION, \n  CREATE_QUESTION_MUTATION, \n  UPDATE_QUESTION_STATUS_MUTATION, \n  CREATE_QUESTION_DATA_MUTATION, \n  UPDATE_ANSWER_RECORD, \n  SET_USER_NAME_MUTATION \n} from '../../graphql/mutations';\n\nconst SolContext = createContext({\n\tnavOpen:false,\n  setNavOpen: () => {},\n  signedIn: false,\n  setSignedIn: () => {},\n  account: \"\",\n  setAccount: () => {},\n  problemSet: [],\n  code:\"\",\n  setCode: () => {},\n  getUser: async() => {},\n  getQuestion: async() => {},\n  getQuestionOfUser: async() => {},\n  createUser: async() => {},\n  createQuestion: async() => {},\n  updateQuestionStatus: async() => {},\n  createQuestionData: async() => {},\n  updateAnswerRecord: async() => {},\n  setUserName: async() => {},\n  getAllQuestion: async() => {},\n\n});\n\nconst SolProvider = (props) => {\n\n  //States comes here\n  const [navOpen, setNavOpen] = useState(false);\n  const [signedIn, setSignedIn] = useState(false);\n  const [account, setAccount] = useState(\"\");\n  const [code, setCode] = useState(\"\")\n\n  //Queries\n  const [getUser] = useLazyQuery(GET_USER_QUERY);\n  const [getQuestion] = useLazyQuery(GET_QUESTION_QUERY);\n  const [getQuestionOfUser] = useLazyQuery(GET_ALL_QUESTION_OF_USER_QUERY);\n  const [getAllQuestion] = useLazyQuery(GET_ALL_QUESTION_DATA_QUERY);\n\n  const problemSet = [\n    {\n      id:1,\n      description:\"problem 1\",  \n      isCorrect: true  \n    },\n    {\n      id:2,\n      description:\"problem 2\",\n      isCorrect: true\n    },\n    {\n      id:3,\n      description:\"problem3\",\n      isCorrect: false\n    }\n  ]\n\n  //Mutations\n  const [createUser] = useMutation(CREATE_USER_MUTATION);\n  const [createQuestion] = useMutation(CREATE_QUESTION_MUTATION);\n  const [updateQuestionStatus] = useMutation(UPDATE_QUESTION_STATUS_MUTATION);\n  const [createQuestionData] = useMutation(CREATE_QUESTION_DATA_MUTATION);\n  const [updateAnswerRecord] = useMutation(UPDATE_ANSWER_RECORD);\n  const [setUserName] = useMutation(SET_USER_NAME_MUTATION);\n\n\n  return (\n\t  <SolContext.Provider\n\t\tvalue={\n\t\t\t{\n        navOpen,\n        setNavOpen,\n        signedIn,\n        setSignedIn,\n        account,\n        setAccount,\n        problemSet,\n        code,\n        setCode,\n        getUser,\n        getQuestion,\n        getQuestionOfUser,\n        createUser,\n        createQuestion,\n        updateQuestionStatus,\n        createQuestionData,\n        updateAnswerRecord,\n        setUserName,\n        getAllQuestion,\n\n\t\t\t}\n\t\t}\n\t\t{...props}\n\t  />\n  )\n}\n\nconst useSol = () => useContext(SolContext);\nexport { SolProvider, useSol };","import { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport PetsRoundedIcon from '@mui/icons-material/PetsRounded';\nimport { useSol } from './hook/useSol';\n\nconst NavigationBar = () => {\n\n  const { navOpen, setNavOpen } = useSol();\n\n  const drawerWidth = 350;\n\n  const handleDrawerOpen = () => {\n    setNavOpen(true);\n  };\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',})\n      (({ theme, open }) => ({\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: drawerWidth,\n      }),\n    }));\n\n  return(\n    <AppBar position=\"fixed\" open={navOpen} color='primary'>\n      <Toolbar>\n        <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"end\"\n        onClick={handleDrawerOpen}\n        sx={{ ...(navOpen && { display: 'none' }) }}\n        >\n          <MenuIcon />\n        </IconButton>\n        \n        <Typography \n          variant=\"h4\" \n          align='center' \n          noWrap sx={{ flexGrow: 1 }} \n          component=\"div\"\n          fontFamily=\"serif\"\n        > \n          <PetsRoundedIcon/> <> </>\n            Solidibility\n        </Typography>\n\n      </Toolbar>\n    </AppBar>\n  )\n}\nexport default NavigationBar;","import DrawerHeader from './DrawerHeader';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport HomeIcon from '@mui/icons-material/Home';\nimport QuizIcon from '@mui/icons-material/Quiz';\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport { useNavigate } from 'react-router-dom';\nimport NavigationBar from '../containers/navigationBar';\nimport { useSol } from '../containers/hook/useSol';\n\nconst navbarTheme = createTheme({\n  status: {\n    danger: '#e53e3e',\n  },\n  palette: {\n    primary: {\n      main: '#FFC78E',\n      darker: '#053e85',\n    },\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Times New Roman',\n      'cursive',\n    ].join(','),\n    fontSize: [25]\n  }\n});\nconst drawerWidth = 350;\nexport default function Navbar() {\n  const { navOpen, setNavOpen } = useSol();\n  const navigate = useNavigate();\n \n  const handleDrawerClose = () => {\n    setNavOpen(false);\n  };\n\n  const handleOnClick = (i) => {\n    switch(i){\n      case 0: {navigate(\"/\"); break;}\n      case 1: {navigate(\"/profile\"); break}\n      case 2: {navigate(\"/quiz\"); break}\n      case 3: {navigate(\"/about-us\"); break}\n    }\n  }\n\n  const handleIcon = (i) => {\n    switch(i){\n      case 0: return <HomeIcon/>\n      case 1: return <AccountCircleIcon/>\n      case 2: return <QuizIcon/>\n      case 3: return <InfoIcon/>\n    }\n  }\n\n  return (\n    <ThemeProvider theme={navbarTheme}>\n      <NavigationBar />\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={navOpen}\n        >\n\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronRightIcon />\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {\n            [\"Home\", \"Profile\", \"Quiz\", \"About us\"].map((text, i) => {\n              const icon = handleIcon(i)\n              return (\n                <ListItem disablePadding key={i}>\n                  <ListItemButton onClick={() => handleOnClick(i)}>\n                    <ListItemIcon>\n                      {icon}\n                    </ListItemIcon>\n                    <Typography paragraph>{text}</Typography>\n                    {/* <ListItemText primary={text} /> */}\n                  </ListItemButton >\n              </ListItem>\n            )\n          })\n        }\n        </List>\n      </Drawer>\n    </ThemeProvider>\n  );\n}","import { useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\n\n// for wallet connection\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useSol } from './hook/useSol';\n\n\n// wallet connection\nconst INFURA_ID = process.env.INFURA_ID;\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n    },\n  },\n  coinbasewallet: {\n    package: CoinbaseWalletSDK, // Required\n    options: {\n      appName: \"web3modal\", // Required\n      infuraId: INFURA_ID, // Required\n      rpc: \"\", // Optional if `infuraId` is provided; otherwise it's required\n      chainId: 1, // Optional. It defaults to 1 if not provided\n      darkMode: false, // Optional. Use dark theme, defaults to false\n    },\n  },\n  binancechainwallet: {\n    package: true,\n  },\n};\nconst web3Modal = new Web3Modal({\n  network: \"goerli\", // optional\n  cacheProvider: true, // optional\n  providerOptions, // required\n});\nconst connectWallet = async () => {\n  if (window.ethereum) {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    await window.ethereum.send(\"eth_requestAccounts\");\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n\n\n    return account;\n  } else {\n    // Show alert if Ethereum provider is not detected\n    alert(\"Please install Mask\");\n  }\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\">\n        笑死不要亂改 copyright\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nconst SignIn = () => {\n  const { account, setAccount, setSignedIn, createUser, createQuestion } = useSol();\n\n  //TODO: handleSignIn \n  const handleConnect = async (event) => {\n    event.preventDefault();\n    const addr = await connectWallet()\n    setAccount(addr);\n    await createUser({\n      variables:{\n        address:addr\n      }\n    });\n    for(let i = 0; i < 3; i++){\n      await createQuestion({\n        variables:{\n          address: addr,\n          questionId: i+1\n        }\n      })\n    }\n  };\n\n  useEffect(() => {\n    if (account !== \"\") {\n      setSignedIn(true);\n    }\n  }, [account]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\" sx={{mt: 3}}>\n              Connect Your Wallet to Login.\n            </Typography>\n            \n            <Box component=\"form\" noValidate onSubmit={handleConnect} sx={{ mt: 5 }}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 0, mb: 2 }}\n              >\n                Connect\n              </Button>\n              <Copyright sx={{ mt: 45 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default SignIn;","import { styled } from \"@mui/material/styles\";\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(5),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 350,\n    marginRight: 270,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 490,\n      marginRight: 150,\n    }),\n    }),\n);\n\nexport default Main;","import Typography from '@mui/material/Typography';\nimport DrawerHeader from './DrawerHeader';\nimport Main from './Main';\nimport { useSol } from '../containers/hook/useSol';\nimport { Link } from '@mui/material';\n\nconst Home = () => {\n  const { navOpen } = useSol();\n  return(\n    <Main open={navOpen}>\n      <DrawerHeader />\n      <Typography variant='h4'> What is Solidibility ? </Typography>\n      <br/>\n\n      <Typography paragraph>\n        Solidibility is a leetcode-like web application. We hope you can learn plenty of knowledge and skills of solidity progarmming from here.\n      </Typography>\n\n      <br/>\n      <Typography variant='h5'> What is Solidity ? </Typography>\n      <br/>\n      <Typography paragraph>  \n        Solidity is a smart-contract langauage which can be compiled and recorded in Ethereum or other related blockchain network. We can use IDE like <Link href=\"https://remix.ethereum.org/\" underline='none'>Remix</Link> to connect with the smart contracts on the blockchain.\n      </Typography> \n    </Main>\n  )\n}\nexport default Home;","import { Box, Typography, styled, Button } from '@mui/material'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleSharpIcon from '@mui/icons-material/CheckCircleSharp';\nimport CancelSharpIcon from '@mui/icons-material/CancelSharp';\nimport Tooltip from '@mui/material/Tooltip';\nimport React, { useEffect } from 'react'\nimport { useSol } from '../containers/hook/useSol';\nimport { useNavigate } from 'react-router-dom';\nimport DrawerHeader from './DrawerHeader';\nimport Main from './Main';\nimport { GET_ALL_QUESTION_DATA_QUERY, GET_ALL_QUESTION_OF_USER_QUERY } from '../graphql/queries';\nimport { useQuery } from '@apollo/client';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\n\nconst typoStyle = {\n  marginLeft: '20px'\n};\n\n\nconst Quiz = () => {\n  const { navOpen, account } = useSol();\n  const navigate = useNavigate();\n  const ToProblem = (id) => {\n    console.log(\"to Problem\");\n    navigate('/quiz/'+ id)\n  }\n\n  const ToHistory = (id) => {\n    navigate('/quiz/' + id + \"/history\")\n  }\n\n  // query data when rendering  \n  const res1 = useQuery(GET_ALL_QUESTION_DATA_QUERY)\n  const res2 = useQuery(GET_ALL_QUESTION_OF_USER_QUERY, {\n    variables: {\n      address: account\n    }\n  });\n  \n  const { loading, data, error } = res1;\n  const { data: userData, loading: userLoading} = res2;    \n  \n  if (loading) return <p>Loading...</p>;\n  const _problemSet = data.allQuestionData;\n  console.log((_problemSet));\n  let problemSet = [];\n  if (userLoading) return <p>Loading...</p>;\n\n  const _userData = userData.allQuestionOfUser;\n  console.log( _userData);\n  \n  for (let i = 0; i < _problemSet?.length; i++) {\n    problemSet[i] = {\n      questionId: _problemSet[i].questionId,\n      name: _problemSet[i].name,\n      isCorrect: _userData[i].isCorrect\n    }\n  }\n\n  let width = 300;\n  if (navOpen) width = 450;\n  \n  return(\n    <>\n\n      { (loading && userLoading) ? <p>Loading...</p> :\n        <Main open={navOpen} style={{\n          marginLeft: width\n        }}>\n          <DrawerHeader/>\n          <Typography variant='h4'> Quiz List</Typography>\n          <p></p>\n          <Typography variant='paragraph'> You can browse and choose the quiz you want to challenge here.</Typography>\n          <p></p>\n          <Typography variant='paragraph'> ✔️  Press the quiz id (left) to enter quizing page. </Typography>\n          <br />\n          <Typography variant='paragraph'> ✔️  Press the status (right) to enter quizing page. </Typography>\n        <Box sx={{\n          height: '100vh',\n          width: { xs: \"100%\", sm: '100%' },\n          bgcolor: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'top',\n          marginTop: '10vh'\n        }}\n        >\n          <TableContainer component={Paper} sx={{\n            height: '50vh',\n            width: {xs: '100%', sm: '100%'},\n            bgcolor: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'top',\n          }}>\n            <Table sx={{ minWidth: `100%` }} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Quiz Id</StyledTableCell>\n                  <StyledTableCell align=\"center\">Quiz Name</StyledTableCell>\n                  <StyledTableCell align=\"right\"> </StyledTableCell>\n                  <StyledTableCell align=\"right\"> </StyledTableCell>\n                  <StyledTableCell align=\"center\">Status</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                problemSet.map((problem, i) => \n                {\n                  return (\n                    <StyledTableRow key={problem.questionId}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        <Tooltip title={\"Enter Quiz \" + problem.questionId}>\n                          <Button onClick={() => ToProblem(problem.questionId)}>{problem.questionId}</Button>\n                        </Tooltip>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">{ problem.name }</StyledTableCell>\n                      <StyledTableCell align=\"right\"></StyledTableCell>\n                      <StyledTableCell align=\"right\"></StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                      <Tooltip title={\"View Quiz \" + problem.questionId + \" Answer History\"} >\n                        <Button onClick={() => ToHistory(problem.questionId)}>\n                          { \n                          _userData[i].isCorrect ? \n                          <CheckCircleSharpIcon color='success' fontSize='large'/>: \n                          <CancelSharpIcon color='warning' fontSize='large'/>}\n                        </Button>\n                      </Tooltip>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          </Box>\n        </Main>\n      }\n    </>\n  )\n\n}\n\nexport default Quiz;","import { useSol } from '../containers/hook/useSol';\nimport Typography from '@mui/material/Typography';\nimport { Avatar } from '@mui/material';\nimport { Stack } from '@mui/material';\nimport DrawerHeader from './DrawerHeader';\nimport Main from './Main';\n\nconst About = () => {\n  const {navOpen} = useSol();\n  return(\n    <>\n    <Main open={navOpen}>\n      <DrawerHeader />\n      <Typography paragraph>\n        <h1>About Us</h1>\n        <Stack direction=\"row\" spacing={2}>\n          <Avatar\n            alt=\"Yanlong Chen\"\n            src=\"https://lh3.googleusercontent.com/tVB8MUKVHssxIcqsmN122kIOHZK_VsxFcQ1TTmHDq0RUTTIm2tMke3U2fcmm0sMNcYLV_2CzE4iui0bJI8MnWevH=w640-h400-e365-rj-sc0x00ffffff\"\n            sx={{ width: 85, height: 85, border: '0.1px solid lightgray' }}\n          />\n          <Avatar\n            alt=\"FuChuan Chung\"\n            src=\"https://media.istockphoto.com/id/1305490985/vector/aquatic-food-web-rgb-color-icon.jpg?s=612x612&w=0&k=20&c=un3y61Oh3MYVDKmA2MxfNn_-Z9J-iMM3kgsACQt6Hkk=\"\n            sx={{ width: 85, height: 85, border: '0.1px solid lightgray' }}\n          />\n        </Stack>\n        <p>We are two senior students from NTU who suffered from Web Programming and at last published this app. </p>\n\n      </Typography>\n      <Typography paragraph>\n      </Typography> \n    </Main>\n    </>\n    \n  )\n\n}\nexport default About;","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport { useSol } from '../containers/hook/useSol';\nimport { Box, Avatar, IconButton, Tooltip} from '@mui/material'\nimport ModeEditOutlineIcon from '@mui/icons-material/ModeEditOutline';\nimport { EmojiEvents } from '@mui/icons-material'\nimport Fade from 'react-reveal/Fade';\nimport {styled} from '@mui/material/styles';\nimport Modal from '@mui/material/Modal';\nimport { useState } from 'react';\nimport InputAdornment from '@mui/material/InputAdornment';  \nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { useQuery } from '@apollo/client';\nimport { GET_USER_QUERY } from '../graphql/queries';\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n}));\n\nlet width = 1400;\nlet marginLeft = 0;\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  marginLeft: marginLeft,\n  width: width,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n};\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst pic = [\n  \"https://cdn-icons-png.flaticon.com/512/1864/1864514.png\",\n  \"https://cdn-icons-png.flaticon.com/512/1864/1864475.png\",\n  \"https://cdn-icons-png.flaticon.com/512/1998/1998713.png\",\n  \"https://cdn-icons-png.flaticon.com/512/1864/1864589.png\",\n  \"https://cdn-icons-png.flaticon.com/512/4710/4710941.png\",\n  \"https://cdn-icons-png.flaticon.com/512/3069/3069172.png\",\n  \"https://cdn-icons-png.flaticon.com/512/1864/1864507.png\",\n  \"https://cdn-icons-png.flaticon.com/512/3975/3975047.png\",\n  \"https://cdn-icons-png.flaticon.com/512/3077/3077443.png\",\n  \"https://cdn-icons-png.flaticon.com/512/2977/2977310.png\"\n]\n\nconst Profile = () => {\n  const { account, navOpen, setUserName } = useSol();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState(\"\")\n  const [num, setNum] = useState(0)\n  const correctNumber = 0;\n  let width = 1400;\n  let marginLeft = 0;\n  const {loading, data: userData} = useQuery(GET_USER_QUERY,{\n    variables:{\n      address:account,\n    }\n  })\n  if(loading) return <p>Loading...</p>\n  const _name = userData.user.name;\n  \n  if (navOpen) {\n    width = 1000;\n    marginLeft = 150;\n  }\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    marginLeft: marginLeft,\n    width: width,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n  };\n  const handleClick = () => {\n    setModalOpen(true)\n  }\n  const handleSubmit = async () => {\n    await setUserName({\n      variables:{\n        address: account,\n        name: name\n      }\n    });\n    setModalOpen(false)\n  }\n  const handleSetName = (e) => {\n    setName(e.target.value)\n  }\n\n  return(\n    <div style={style}>\n      <DrawerHeader style={{marginTop: '0px'}} />\n      <Box id=\"aboutme\"\n        sx={{ height: { xs: '200vh', sm: '100vh' }, width: '110%', display: 'flex', flexWrap: 'wrap'\n        }}\n      >\n        <Box\n          sx={{height: { xs: '100vh', sm: '100%' }, width: { xs: '100%', sm: \"40%\" }, bgcolor: 'white',\n            display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative'\n          }}\n        >\n          <Box\n            sx={{display: 'flex',flexDirection: 'column',alignItems: 'center',\n              height: '50%',width: '80%',justifyContent: 'space-between'\n            }}\n          >\n          <Fade left>\n            <Avatar sx={{width: '250px',height: '250px',marginBottom:\"30px\", cursor: 'pointer', border: '0.1px solid lightgray'}} src={pic[num]} onClick={() => setNum((num+1)%10)}  />\n            <Typography variant={'h6'} sx={{marginBottom: '1vh',textAlign: 'center',\n              color: 'black',fontSize: '18px',fontWeight: '500'\n            }}>\n              {\"Account: \" + account}\n            </Typography>\n            <Typography variant={'h6'} sx={{ textAlign: 'center',\n              color: 'black',fontSize: '18px',fontWeight: '500'\n            }}>\n              {name ? `Name:${name}`:`Name: ${_name}`}\n            </Typography>\n            <Tooltip title='Change Your Name'>\n              <IconButton onClick={handleClick}>\n                <ModeEditOutlineIcon/>\n              </IconButton>\n            </Tooltip>\n            \n          </Fade>\n        </Box>\n      </Box>\n      <Box\n        sx={{height: { xs: '100vh', sm: '100%' }, width: { xs: '100%', sm: \"55%\" }, bgcolor: 'grey',\n          display: 'flex', justifyContent: 'center', alignItems: 'center'\n        }}\n      >\n        <Box sx={{\n          width: '80%',\n          height: '30%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-around'\n        }}>\n          {/* Achievement */}\n          <Fade right>\n            <Typography variant='h4' color={'white'} fontSize=\"40px\" fontWeight={800}>\n              Achievement\n            </Typography>\n            <Box gap={3} sx={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              alignItems: 'center'}}>\n\n              <EmojiEvents sx={{\n                color: 'yellow',\n                fontSize: '30px'\n              }} />\n              <Typography fontSize={'18px'} color=\"white\" fontWeight={600}>\n                {\"You have solved \" + correctNumber + \" questions!\" }\n              </Typography>\n            </Box>\n          </Fade>\n          {/* Record */}\n          <Fade right>\n            <Typography variant='h4' color={'white'} fontSize=\"40px\" fontWeight={800}>\n              Record\n            </Typography>\n\n            <Box gap={3} sx={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              alignItems: 'center'}}>\n\n              <EmojiEvents sx={{\n                color: 'yellow',\n                fontSize: '30px'\n              }} />\n              <Typography fontSize={'18px'} color=\"white\" fontWeight={600}>\n                Problem 1 Solved\n              </Typography>\n            </Box>\n          </Fade>\n        </Box>\n      </Box>\n    </Box>\n    <Modal\n    open={modalOpen}\n    onClose={()=>setModalOpen(false)}\n    aria-labelledby=\"modal-modal-title\"\n    aria-describedby=\"modal-modal-description\"\n    >\n    <Box sx={modalStyle}>\n      <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            \"Please enter your name\"\n      </Typography>\n      <p></p>\n \n        <TextField \n          id=\"users-name\" \n          label=\"name\" \n          variant=\"outlined\" \n          required \n          value={name} \n          onChange={handleSetName}\n          \n        />\n        <p></p>\n        <Button variant=\"outlined\" color=\"error\" onClick={() => handleSubmit()}>\n            SET\n        </Button>\n        \n      \n    </Box>\n    </Modal>\n    </div>\n    \n  )\n\n}\nexport default Profile;","import { forwardRef, useEffect, useState } from 'react';\nimport DrawerHeader from './DrawerHeader';\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useSol } from '../containers/hook/useSol'\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Editor from \"@monaco-editor/react\";\nimport Button from '@mui/material/Button';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport { border, margin, sizing, width } from '@mui/system';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_QUESTION_DATA_QUERY, GET_QUESTION_QUERY } from '../graphql/queries';\n\nconst Alert = forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst typoStyle = {\n  marginLeft: '20px',\n  marginTop: '10px'\n};\n\nconst ProblemPage = () => {\n\n  const [open, setOpen] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const { getAllQuestion } = useSol();\n\n  const { id } = useParams();\n  const { account, problemSet, setCode, code, navOpen, updateAnswerRecord, updateQuestionStatus } = useSol();\n  const navigate = useNavigate();\n  const answer = \"124\";\n  // deal with css\n  let drawerWidth = 290;\n  let eWidth = 290;\n  let width = `75%`;\n  console.log(account);\n\n  const res1 = useQuery(GET_ALL_QUESTION_DATA_QUERY);\n  console.log(account, id);\n  const res2 = useQuery(GET_QUESTION_QUERY, {\n    variables: {\n      address: account,\n      questionId: Number(id)\n    }\n  })\n\n  const {loading, data: questionData} = res1;\n  if (loading || !questionData) return <p>Loading...</p>\n  const thisData = questionData.allQuestionData[id-1];\n\n  const {loading: _loading, data: _questionData} = res2;\n  if (_loading || !_questionData) return <p>Loading...</p>\n  console.log(_questionData);\n  const tryId = _questionData.question.answerRecord.length - 1\n  \n  if (navOpen) {\n    drawerWidth = 440;\n    eWidth = 440;\n    width = `78%`;\n  }\n\n  const handleOnChange = (e) => {\n    setCode(e)\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  // 提交答案\n  const handleClick = async  () => {\n    console.log(code);\n    if (code !== thisData.answer) {\n      setCorrect(false);\n      // TO_DO 更新題目回答\n      await updateAnswerRecord({\n        variables:{\n          address:account,\n          questionId:thisData.questionId,\n          tryId: tryId, //to modified\n          isCorrect: false,\n          record: code\n        }\n      })\n    }\n    else {\n      setCorrect(true);\n      // TO_DO 更新題目回答\n      await updateAnswerRecord({\n        variables:{\n          address:account,\n          questionId:thisData.questionId,\n          tryId:0, //to modified\n          isCorrect: true,\n          record: code\n        }\n      })\n      updateQuestionStatus({\n        variables:{\n          address:account,\n          questionId:thisData.questionId\n        }\n      })\n    }\n    setOpen(true);\n  };\n\n\n\n  return(\n    <>\n    <div style={{\n      width: '50%',\n      marginTop: '35px',\n      marginLeft: drawerWidth,\n      marginRight: drawerWidth,\n      alignItems: 'center'\n    }}>\n      <DrawerHeader/>\n      <Button onClick={() => {navigate('/quiz')}}>\n          <ArrowBackIosIcon />\n      </Button>\n      <Typography variant='h4' style={typoStyle}> {`Problem ${id}: ${thisData.name}`} </Typography>\n      <Typography paragraph style={typoStyle}>\n        {thisData.description}\n      </Typography>\n      <Typography paragraph style={typoStyle}>\n        {`Example1:${thisData.example1}`}\n      </Typography>\n      <Typography paragraph style={typoStyle}>\n        {`Example2:${thisData.example2}`}\n      </Typography>\n      <Typography paragraph style={typoStyle}>\n        {`${thisData.others}`}\n      </Typography>\n    </div>\n\n    <div style={{\n      marginTop: '40px',\n      marginLeft: eWidth\n      }}\n    >\n      <Editor\n        height=\"65vh\"\n        width={width}\n        language={\"javascript\"}\n        value={code}\n        theme=\"vs-dark\"\n        defaultValue={thisData.code}\n        onChange={(e) => {\n          handleOnChange(e)\n        }}\n      />\n      <br />\n      <Button variant=\"outlined\" color=\"error\" onClick={() => handleClick()} style={typoStyle}>\n        SUBMIT\n      </Button>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        {\n          correct ? \n          <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n            You Are Correct!\n          </Alert> :\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n            You Are Wrong!\n          </Alert>\n        }\n      </Snackbar>\n    </div>\n    </>\n\n    \n  )\n}\n\nexport default ProblemPage","import { Button, Snackbar } from '@mui/material'\nimport IconButton from '@mui/material/IconButton';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { useState } from 'react'\n\nconst CopyButton = ({code}) => {\n    const [open, setOpen] = useState(false)\n    const handleClick = () => {\n      setOpen(true)\n      navigator.clipboard.writeText(code)\n    }\n    \n    return (\n        <>\n          <IconButton onClick={handleClick}>\n            <ContentCopyIcon/>\n          </IconButton>\n          <Snackbar\n            open={open}\n            onClose={() => setOpen(false)}\n            autoHideDuration={2000}\n            message=\"Copied to clipboard\"\n          />\n        </>\n    )\n}\n\nexport default CopyButton;","import { Box, Typography, styled, Button, Modal } from '@mui/material'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleSharpIcon from '@mui/icons-material/CheckCircleSharp';\nimport CancelSharpIcon from '@mui/icons-material/CancelSharp';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Tooltip from '@mui/material/Tooltip';\nimport React, { useState } from 'react'\nimport { useSol } from '../containers/hook/useSol';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport DrawerHeader from './DrawerHeader';\nimport Main from './Main';\nimport CopyButton from './CopyButton';\nimport { useQuery } from '@apollo/client';\nimport { GET_QUESTION_QUERY } from '../graphql/queries';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n  \n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n  const typoStyle = {\n    marginLeft: '20px'\n  };\n\nconst History = () => {\n\n  const { id } = useParams()\n  const { problemSet, setCode, code, navOpen, account } = useSol();\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const numId = Number(id)\n  \n  const {loading, data: question} = useQuery(GET_QUESTION_QUERY,{\n    variables:{\n      address:account,\n      questionId:numId\n    }\n  })\n\n  if(loading) return <p>Loading...</p>\n\n  const questionData = question.question.answerRecord\n  console.log(questionData);\n\n  \n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  let width = 300;\n  if (navOpen) width = 450;\n  return(\n    <>\n      <Main open={navOpen} style={{\n        marginLeft: width\n      }}>\n        <DrawerHeader/>\n        <Button onClick={() => {navigate('/quiz')}}>\n          <ArrowBackIosIcon />\n        </Button>\n        \n        <p></p>\n        <Typography variant='h4' style={typoStyle}> { \"Quiz \" + id + \" History\" } </Typography>\n        <p></p>\n        <Typography variant='paragraph' style={typoStyle}> ✔️  You can checkout your answer history here! </Typography>\n        <p></p>\n      <Box sx={{\n        height: '100vh',\n        width: { xs: \"100%\", sm: '100%' },\n        bgcolor: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'top',\n        marginTop: '10vh'\n      }}\n      >\n        <TableContainer component={Paper} sx={{\n          height: '50vh',\n          width: {xs: '100%', sm: '100%'},\n          bgcolor: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'top',\n        }}>\n          <Table sx={{ minWidth: `100%` }} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>History Id</StyledTableCell>\n                <StyledTableCell align=\"center\">Checkout</StyledTableCell>\n                <StyledTableCell align=\"right\"> </StyledTableCell>\n                <StyledTableCell align=\"right\"> </StyledTableCell>\n                <StyledTableCell align=\"center\">Status</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {questionData.map((problem) => (\n                <StyledTableRow key={problem.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                      <Button>{problem.tryId}</Button>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    <Button color={ problem.isCorrect ? 'success' : 'warning'} onClick={handleOpen}>\n                      Press To Check Your History Answer \n                    </Button>\n                    <Modal\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby=\"modal-modal-title\"\n                      aria-describedby=\"modal-modal-description\"\n                    >\n                      <Box sx={style}>\n                        \n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                          Your Answer:\n                        </Typography>\n                        <CopyButton code={problem.record}/>\n                        <Typography sx={{ mt: 2 }}>\n                          {problem.record}\n                        </Typography>\n                      </Box>\n                    </Modal>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\"></StyledTableCell>\n                  <StyledTableCell align=\"right\"></StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                        {  \n                            problem.isCorrect ? \n                            <CheckCircleSharpIcon color='success' fontSize='large'/> : \n                            <CancelSharpIcon color='warning' fontSize='large'/>\n                        }\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        </Box>\n      </Main>\n    </>\n  )\n}\n\nexport default History;","import './App.css';\nimport { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport { useSol } from './containers/hook/useSol';\nimport SignIn from './containers/Signin';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './components/Home';\nimport Quiz from './components/Quiz';\nimport About from './components/About';\nimport Profile from './components/Profile';\nimport ProblemPage from './components/ProblemPage';\nimport History from './components/History';\nimport { createTheme, ThemeProvider } from '@mui/material';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Times New Roman',\n      'cursive',\n    ].join(','),\n    fontSize: 20\n  },});\n\nfunction App() {\n  const { signedIn } = useSol();\n\n  \n  return (\n\n    <ThemeProvider theme={theme}>\n      { !signedIn ? <SignIn /> \n        :     \n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" >\n                <Route index element={<Home />} />\n                  <Route path=\"/profile\" element={<Profile />} />\n                  <Route path=\"/quiz\" element={<Quiz />} />\n                  <Route path=\"/quiz/:id\" element={<ProblemPage />} />\n                  <Route path=\"quiz/:id/history\" element={<History />}/>\n                  <Route path=\"/about-us\" element={<About />} />\n              </Route>\n            </Routes>\n          </Router>\n\n      }\n    </ThemeProvider>   \n      \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SolProvider } from './containers/hook/useSol';\nimport { ApolloClient, InMemoryCache, ApolloProvider, split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { GraphQLWsLink } from '@apollo/client/link/subscriptions';\nimport { createClient } from 'graphql-ws';\n\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/graphql',\n});\n\nconst wsLink = new GraphQLWsLink(createClient({\n  url: 'ws://localhost:4000/graphql',\n}));\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition'\n      && definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <SolProvider>\n        <App />\n      </SolProvider>  \n    </ApolloProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}